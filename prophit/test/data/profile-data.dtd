
<!--
Each document represents a call graph with timing and call count information which was 
captured by a profiler.
-->
<!ELEMENT call-graph ( date, source-file, user, measurement+, invocation+ )>
<!ATTLIST call-graph
  fileVersion ( 1 ) #REQUIRED
  sourceProfiler ( dashprof | hprof ) #REQUIRED
  id ID #REQUIRED
>

<!-- 
Date on which the call graph was created 
Date format is YYYY-MM-DD HH:MM:SS with HH in 24-hour time
-->
<!ELEMENT date ( #PCDATA )>
<!-- The original source file which contained the profile data -->
<!ELEMENT source-file ( #PCDATA )>
<!-- The user who generated this call-graph. Can be obtained from the 'user.name' System property -->
<!ELEMENT user ( #PCDATA )>

<!ELEMENT measurement ( stacktrace )>
<!--
exclusiveTime can always be calculated from the inclusiveTime of a function and the inclusiveTime of its
callees. But it is handy to have it here so that the measurement elements can be used to find hot spots
( stack traces with high exclusive time ).
-->
<!ATTLIST measurement 
  id            ID    #REQUIRED
  inclusiveTime CDATA #REQUIRED
  exclusiveTime CDATA #REQUIRED
  numCalls      CDATA #REQUIRED
>

<!ELEMENT stacktrace ( method+ )>

<!ELEMENT method ( #PCDATA )>

<!-- 
The 'invocation' element represents a method invocation in the program. The caller and callee functions are both
represented by 'measurement' elements, each of which stores its respective stack trace and profile measurement data 
(e.g. time, numCalls).

The 'measurement' elements alone can be used to detect 'hot spots' (stack traces with high inclusive or exclusive times).
But the invocation elements are necessary to build the complete call graph because they relate the measurements to each other.
-->
<!ELEMENT invocation EMPTY>
<!-- 
If there is no callFraction, its call fraction is assumed to be 1 (there is only 1 occurance of it)
If there is no parentRCCID, the rccID is the RCC of a root function (e.g. 'main') 
Any measurementID which appears in more than one invocation must have a callFraction. The callFraction indicates
    the fraction of time for the measurement (referred to by the measurementID) which is assigned to this invocation
  The sum of all the callFractions across all the invocations in which a measurementID appears always equals 1
-->
<!ATTLIST invocation
  parentMeasurementID IDREF #IMPLIED
  measurementID       IDREF #REQUIRED
  callFraction        CDATA #IMPLIED
>




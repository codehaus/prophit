<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE call-graph SYSTEM "profile-data.dtd" >

<!--
This file represents the parsed and solved profile in data/simple.prof (which is in -prof format)
-->
<call-graph>
	<date>2002-12-10 10:39:00</date>
	<source-file>d:/home/kgilpin/orbit/data/simple.prof</source-file>
	<user>kgilpin</user>
	<!-- In a generated call-graph the measurement/@id attributes will be integers -->
	<measurement id="1" time="300" numCalls="1">
		<stacktrace>
			<method>main()</method>
		</stacktrace>
	</measurement>
	<measurement id="2" time="180" numCalls="1">
		<stacktrace>
			<method>main()</method>
			<method>test()</method>
		</stacktrace>
	</measurement> 
	<measurement id="3" time="120" numCalls="1">
		<stacktrace>
			<method>main()</method>
			<method>init()</method>
		</stacktrace>
	</measurement>
	<measurement id="4" time="90" numCalls="1">
		<stacktrace>
			<method>init()</method>
			<method>DBExec()</method>
		</stacktrace>
	</measurement>
	<measurement id="5" time="120" numCalls="2">
		<stacktrace>
			<method>test()</method>
			<method>DBExec()</method>
		</stacktrace>
	</measurement>
	<measurement id="6" time="30" numCalls="1">
		<stacktrace>
			<method>DBExec()</method>
			<method>insert()</method>
		</stacktrace>
	</measurement>
	<measurement id="7" time="60" numCalls="5">
		<stacktrace>
			<method>DBExec()</method>
			<method>update()</method>
		</stacktrace>
	</measurement>
	<measurement id="8" time="100" numCalls="15">
		<stacktrace>
			<method>insert()</method>
			<method>append()</method>
		</stacktrace>
	</measurement>
	<measurement id="9" time="200" numCalls="30">
		<stacktrace>
			<method>update()</method>
			<method>append()</method>
		</stacktrace>
	</measurement>
	<invocation measurementID="1" />
	<invocation parentMeasurementID="1" measurementID="2" />
	<invocation parentMeasurementID="1" measurementID="3" />
	<invocation parentMeasurementID="2" measurementID="5" />
	<invocation parentMeasurementID="3" measurementID="4" />
	<!-- 
	These two invocations are invocations are DBExec:insert from 2 different contexts
	Thus the callFraction numbers specify how the measured data for DBExec:insert should be split
	  between the two invocations

	For -prof profiles, the times are split according to the numCalls of the parentMeasurementIDs.
	  In this case, the split is 1/3 and 2/3, because measurement[@id = 'test:DBExec']/@numCalls = 2
	  and measurement[@id = 'test:DBExec']/@numCalls = 1 
	  (this strange syntax is XPath)	
	--> 
	<invocation parentMeasurementID="5" measurementID="6" callFraction="0.6666666667" />
	<invocation parentMeasurementID="4" measurementID="6" callFraction="0.3333333333" />
	<!-- Likewise for DBExec:update -->
	<invocation parentMeasurementID="5" measurementID="7" callFraction="0.6666666667" />
	<invocation parentMeasurementID="4" measurementID="7" callFraction="0.3333333333" />
	<invocation parentMeasurementID="6" measurementID="8" />
	<invocation parentMeasurementID="7" measurementID="9" />
</call-graph>
